///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class TransactionResponseDataItemsProducts {
/*
{
  "name": "Lemari",
  "quantity": 1
} 
*/

  String? name;
  int? quantity;

  TransactionResponseDataItemsProducts({
    this.name,
    this.quantity,
  });
  TransactionResponseDataItemsProducts.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    quantity = json['quantity']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['quantity'] = quantity;
    return data;
  }
}

class TransactionResponseDataItemsStatus {
/*
{
  "name": "Menunggu Pembayaran",
  "desc": "menunggu pembayaran",
  "code": "WAITING_PAYMENT"
}
*/

  String? name;
  String? desc;
  String? code;

  TransactionResponseDataItemsStatus({
    this.name,
    this.desc,
    this.code,
  });
  TransactionResponseDataItemsStatus.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    desc = json['desc']?.toString();
    code = json['code']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['desc'] = desc;
    data['code'] = code;
    return data;
  }
}

class TransactionResponseDataItems {
/*
{
  "id": "235",
  "merchant_name": "Toko Jual Apa Saja",
  "is_official": false,
  "is_verified": false,
  "is_accepted": false,
  "accepted_date": null,
  "shipped_date": null,
  "amount": 675000,
  "payment_url": "https://sandbox.doku.com/checkout/link/20220430165133876412520221201001250812",
  "payment_expiry_date": "2022-05-01T00:15:44.000Z",
  "created_date": "2022-04-30T17:12:44.000Z",
  "updated_date": "2022-04-30T17:12:51.000Z",
  "status": {
    "name": "Menunggu Pembayaran",
    "desc": "menunggu pembayaran",
    "code": "WAITING_PAYMENT"
  },
  "products": [
    {
      "name": "Lemari",
      "quantity": 1
    }
  ],
  "thumbnail": "https://storage.googleapis.com/halanesia_dev_v0/product/image/97/00adced5-de84-4a11-af24-962dca5ae0f0.jpg?GoogleAccessId=halanesia-be-dev%40halanesia-dev.iam.gserviceaccount.com&Expires=1652146075&Signature=jUwK50diA6kB9XEAJy6ANRtuCx7LgwxHjpYDiK8I2eagq9FxEDngMJYeLAQQ82mN5iUpm8WZwGH8hfbxNpjnBMqowwNFw78EPS0vQtpnNCvd3zWkMT%2BzzdQeaczVxiE3PBcTbLhA0yEwLuk%2FrmXj6qnZYQeOK%2FNBDFgP42DmofrDzEcSNGoqDy%2FvRpX6T7jY09qyv2k%2F29Tml5rwA1P5ZmKci7lzOd8UZuzCXh%2BOFB6%2F8IJh5ntbn%2FI%2Fb%2Fiy4jDCFQbVZAriuSYLo3WhqCnGnQlM63nsEdPx%2FkM%2Bt%2B4u4wYtqbVV7vp3PRjlr5CXkGkB4Pf9qjO1evrcEvWfjCymyQ%3D%3D"
}
*/

  String? id;
  String? merchantName;
  bool? isOfficial;
  bool? isVerified;
  bool? isAccepted;
  String? acceptedDate;
  String? shippedDate;
  int? amount;
  String? paymentUrl;
  String? paymentExpiryDate;
  String? createdDate;
  String? updatedDate;
  TransactionResponseDataItemsStatus? status;
  List<TransactionResponseDataItemsProducts?>? products;
  String? thumbnail;

  TransactionResponseDataItems({
    this.id,
    this.merchantName,
    this.isOfficial,
    this.isVerified,
    this.isAccepted,
    this.acceptedDate,
    this.shippedDate,
    this.amount,
    this.paymentUrl,
    this.paymentExpiryDate,
    this.createdDate,
    this.updatedDate,
    this.status,
    this.products,
    this.thumbnail,
  });
  TransactionResponseDataItems.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    merchantName = json['merchant_name']?.toString();
    isOfficial = json['is_official'];
    isVerified = json['is_verified'];
    isAccepted = json['is_accepted'];
    acceptedDate = json['accepted_date']?.toString();
    shippedDate = json['shipped_date']?.toString();
    amount = json['amount']?.toInt();
    paymentUrl = json['payment_url']?.toString();
    paymentExpiryDate = json['payment_expiry_date']?.toString();
    createdDate = json['created_date']?.toString();
    updatedDate = json['updated_date']?.toString();
    status = (json['status'] != null) ? TransactionResponseDataItemsStatus.fromJson(json['status']) : null;
    if (json['products'] != null) {
      final v = json['products'];
      final arr0 = <TransactionResponseDataItemsProducts>[];
      v.forEach((v) {
        arr0.add(TransactionResponseDataItemsProducts.fromJson(v));
      });
      products = arr0;
    }
    thumbnail = json['thumbnail']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['merchant_name'] = merchantName;
    data['is_official'] = isOfficial;
    data['is_verified'] = isVerified;
    data['is_accepted'] = isAccepted;
    data['accepted_date'] = acceptedDate;
    data['shipped_date'] = shippedDate;
    data['amount'] = amount;
    data['payment_url'] = paymentUrl;
    data['payment_expiry_date'] = paymentExpiryDate;
    data['created_date'] = createdDate;
    data['updated_date'] = updatedDate;
    if (status != null) {
      data['status'] = status!.toJson();
    }
    if (products != null) {
      final v = products;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['products'] = arr0;
    }
    data['thumbnail'] = thumbnail;
    return data;
  }
}

class TransactionResponse {
/*
{
  "currentItems": 5,
  "totalItems": 13,
  "currentPage": 1,
  "totalPages": 3,
  "items": [
    {
      "id": "235",
      "merchant_name": "Toko Jual Apa Saja",
      "is_official": false,
      "is_verified": false,
      "is_accepted": false,
      "accepted_date": null,
      "shipped_date": null,
      "amount": 675000,
      "payment_url": "https://sandbox.doku.com/checkout/link/20220430165133876412520221201001250812",
      "payment_expiry_date": "2022-05-01T00:15:44.000Z",
      "created_date": "2022-04-30T17:12:44.000Z",
      "updated_date": "2022-04-30T17:12:51.000Z",
      "status": {
        "name": "Menunggu Pembayaran",
        "desc": "menunggu pembayaran",
        "code": "WAITING_PAYMENT"
      },
      "products": [
        {
          "name": "Lemari",
          "quantity": 1
        }
      ],
      "thumbnail": "https://storage.googleapis.com/halanesia_dev_v0/product/image/97/00adced5-de84-4a11-af24-962dca5ae0f0.jpg?GoogleAccessId=halanesia-be-dev%40halanesia-dev.iam.gserviceaccount.com&Expires=1652146075&Signature=jUwK50diA6kB9XEAJy6ANRtuCx7LgwxHjpYDiK8I2eagq9FxEDngMJYeLAQQ82mN5iUpm8WZwGH8hfbxNpjnBMqowwNFw78EPS0vQtpnNCvd3zWkMT%2BzzdQeaczVxiE3PBcTbLhA0yEwLuk%2FrmXj6qnZYQeOK%2FNBDFgP42DmofrDzEcSNGoqDy%2FvRpX6T7jY09qyv2k%2F29Tml5rwA1P5ZmKci7lzOd8UZuzCXh%2BOFB6%2F8IJh5ntbn%2FI%2Fb%2Fiy4jDCFQbVZAriuSYLo3WhqCnGnQlM63nsEdPx%2FkM%2Bt%2B4u4wYtqbVV7vp3PRjlr5CXkGkB4Pf9qjO1evrcEvWfjCymyQ%3D%3D"
    }
  ]
}
*/

  int? currentItems;
  int? totalItems;
  int? currentPage;
  int? totalPages;
  List<TransactionResponseDataItems?>? items;

  TransactionResponse({
    this.currentItems,
    this.totalItems,
    this.currentPage,
    this.totalPages,
    this.items,
  });
  TransactionResponse.fromJson(Map<String, dynamic> json) {
    currentItems = json['currentItems']?.toInt();
    totalItems = json['totalItems']?.toInt();
    currentPage = json['currentPage']?.toInt();
    totalPages = json['totalPages']?.toInt();
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <TransactionResponseDataItems>[];
      v.forEach((v) {
        arr0.add(TransactionResponseDataItems.fromJson(v));
      });
      items = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['currentItems'] = currentItems;
    data['totalItems'] = totalItems;
    data['currentPage'] = currentPage;
    data['totalPages'] = totalPages;
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    return data;
  }
}

